org: mattberserk

service: productService

provider:
  name: aws
  runtime: nodejs22.x
  environment:
    BUCKET_NAME: product-images-matt-lino-12340
    DYNAMO_TABLE: Products
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:PutObject
      Resource: arn:aws:s3:::product-images-matt-lino-12340/*
    - Effect: Allow
      Action:
        - dynamoDb:PutItem
        - dynamoDb:UpdateItem
        - dynamoDb:Scan
        - dynamoDb:DeleteItem
      Resource: arn:aws:dynamodb:us-east-1:958313499473:table/Products
    - Effect: Allow
      Action:
        - sns:Publish
      Resource: arn:aws:sns:us-east-1:958313499473:ProductCleanupTopic

  httpApi:
    authorizers:
      myCognitoAuth:
        identitySource: $request.header.Authorization
        issuerUrl: https://cognito-idp.us-east-1.amazonaws.com/us-east-1_y0NwyvEfn
        audience:
          - 51s363ja1rdpaop0vtp1tgn202

resources:
  Resources:
    ProductTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Products
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
    ProductImagesBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: product-images-matt-lino-12340
    ProductCleanupTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: ProductCleanupTopic
    CategoryCleanupSubscription:
      Type: AWS::SNS::Subscription
      Properties:
        TopicArn: arn:aws:sns:us-east-1:958313499473:ProductCleanupTopic
        Protocol: email
        Endpoint: matheuslino86a@gmail.com
functions:
  getUploadUrl:
    handler: handlers/getUploadUrl.getUploadUrl
    events:
      - httpApi:
          path: /get-upload-url
          method: post
          authorizer:
            name: myCognitoAuth
  getApprovedProducts:
    handler: handlers/getApprovedProducts.getApprovedProducts
    events:
      - httpApi:
          path: /approve-products
          method: get

  updateProductImage:
    handler: handlers/updateProductImage.updateProductImage
    events:
      - s3:
          bucket: product-images-matt-lino-12340
          event: s3:ObjectCreated:Put
          existing: true
  cleanupProducts:
    handler: handlers/cleanupProducts.cleanupProducts
    events:
      - schedule: rate(2 minutes)
